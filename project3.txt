1、代码运行和分析
   长度扩展攻击（length extension attack），是指针对某些允许包含额外信息的加密散列函数的攻击手段。
   对于满足以下条件的散列函数，都可以作为攻击对象：
① 加密前将待加密的明文按一定规则填充到固定长度（例如512或1024比特）的倍数；
② 按照该固定长度，将明文分块加密，并用前一个块的加密结果，作为下一块加密的初始向量（Initial Vector）。
满足上述要求的散列函数称为Merkle–Damgard散列函数。

在进行身份验证时，注意到会话存储正在使用 HMAC（消息身份验证代码）对会话进行身份验证。
HMAC 通过使用秘密 S 和散列函数 H 来生成 MAC 来验证消息 M。消息和MAC（M，MAC）一起发送给客户端。
基于哈希 H(M1) 和 M1 的长度，长度扩展攻击允许计算 M1 || 的有效哈希 M2，其中M2是我们生成的消息。
请注意，我们只需要 M1 的长度，而不需要它的内容。因此，如果我们考虑之前的情况，其中 M1 = S || M，
这意味着攻击者可以扩展原始消息并计算该扩展消息的有效哈希，而无需知道秘密，只需知道 S || 的长度 M。
由于客户端知道M及其长度，因此只有S的长度仍然未知。
通过这种攻击，我们将能够针对使用 H(S || M) 作为 MAC 的服务器生成有效消息。
所有基于 Merkle-Damgard 构造（md5、SHA-1、SHA-2）的哈希函数都容易受到此攻击。
所以SM3和SHA-256都易受到此类攻击。
至于如何入手：初步思路为,通过代码扩展消息的长度，并计算出该扩展后消息对应的Hash值
                       
